package com.offbytwo.jenkins.juntest;

import com.offbytwo.jenkins.JenkinsServer;
import com.offbytwo.jenkins.model.QueueReference;
import org.junit.Test;

import java.util.HashMap;
import java.util.Map;


public class JenkinsJobAPITest {

    // 连接 Jenkins
    JenkinsServer jenkinsServer = JenkinsConnect.connection();

    @Test
    public void TestBuildWithParams() throws Exception {
        Map<String, String> object = new HashMap<>();
        object.put("name", "fujun");
        object.put("city", "");
        System.out.println(object);
        QueueReference res = jenkinsServer.getJob("juntest-pipeline-withparams").build(object);
        System.out.println(res.getQueueItemUrlPart());
    }

    @Test
    public void TestBuildWithParamsPost() throws Exception {
        Map<String, String> object = new HashMap<>();
        object.put("name", "fujun");
        object.put("city", "");
        System.out.println(object);
        QueueReference res = jenkinsServer.getJob("juntest-pipeline-withparams").buildWithParams(object,null,false);
        System.out.println(res.getQueueItemUrlPart());
    }
}
